name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
    branches:
        - 'main'

env:
  PROJECT_ID: 'github-lab-442719'
  REGION: 'europe-west3'
  IMAGE_NAME: 'ai-weather-gen-nest'
  SERVICE: 'ai-weather-gen'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    defaults:
      run:
        working-directory: ./backend-nest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@f112390a2df9932162083945e46d439060d66ec2'
        with:
          credentials_json: '${{ secrets.SA_CREDS }}'

      # BEGIN - Docker auth and build
      #
      # If you already have a container image, you can omit these steps.
      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      - name: Deploy to Google Cloud Run
        uses: 'google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17'
          run: |
            gcloud run deploy nest-app \
              --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
              --platform managed \
              --region ${{ env.REGION }} \
              --allow-unauthenticated \
              --set-env-vars MONGODB=${{ secrets.MONGO }},WEATHER_API_URL=${{ secrets.GERMINI_API_KEY }},WEATHER_API_URL=${{ secrets.GERMINI_API_KEY }}

        # END - Docker auth and build

      - name: 'Show output'
        run: |2-

          echo ${{ steps.deploy.outputs.url }}
